{"version":3,"sources":["webpack:///./src/views/Car.vue?361f","webpack:///./src/views/Car.vue?1e70","webpack:///./src/views/Car.vue?7a1d","webpack:///./src/views/Car.vue","webpack:///./src/views/Water.vue?59b6","webpack:///./src/views/Water.vue?7e50","webpack:///./src/views/Water.vue?c355","webpack:///./src/views/Water.vue","webpack:///./node_modules/three-obj-mtl-loader/index.js","webpack:///./src/views/Water.vue?71d9","webpack:///./src/views/Car.vue?9ddc"],"names":["Carvue_type_template_id_d473dc92_render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","id","directives","name","rawName","value","percentage","expression","text-inside","stroke-width","status","staticRenderFns","Carvue_type_script_lang_ts_Geometry","_Vue","Geometry","_this","Object","classCallCheck","inherits","createClass","key","_this2","scene","three_module","mtlLoader","three_obj_mtl_loader","objLoader","load","materials","preload","setMaterials","object","add","console","log","xhr","loaded","total","frontLeft","clone","rotateZ","Math","PI","translateX","translateY","translateZ","frontRight","point","position","set","ambient","width","window","innerWidth","height","innerHeight","k","s","camera","lookAt","renderer","setSize","setClearColor","document","getElementById","render","requestAnimationFrame","rend","appendChild","domElement","sc","getObjectByName","sin","carBody","rotateX","OrbitControls","vue_property_decorator","tslib_es6","Carvue_type_script_lang_ts_","views_Carvue_type_script_lang_ts_","component","componentNormalizer","options","__file","__webpack_exports__","Watervue_type_template_id_e587b964_render","_m","Watervue_type_script_lang_ts_Geometry","possibleConstructorReturn","getPrototypeOf","apply","arguments","loaderFont","groundGeometry","font","fontMaterial","color","specular","shininess","text","size","curveSegments","bevelThickness","bevelSize","bevelEnabled","center","scale","translate","rotateY","groundMaterial","ground","rotation","x","textureLoader","map","needsUpdate","Watervue_type_script_lang_ts_","views_Watervue_type_script_lang_ts_","THREE","__webpack_require__","MTLLoader","manager","undefined","DefaultLoadingManager","prototype","constructor","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","parse","setTexturePath","texturePath","setBaseUrl","warn","setCrossOrigin","crossOrigin","setMaterialOptions","materialOptions","lines","split","info","delimiter_pattern","materialsInfo","i","length","line","trim","charAt","pos","indexOf","substring","toLowerCase","ss","parseFloat","materialCreator","MaterialCreator","setManager","baseUrl","materialsArray","nameLookup","side","FrontSide","wrap","RepeatWrapping","convert","converted","mn","mat","covmat","prop","save","lprop","normalizeRGB","ignoreZeroRGBs","create","getIndex","materialName","getAsArray","index","createMaterial_","params","resolveURL","test","setMapForType","mapType","texParams","getTextureParams","loadTexture","repeat","copy","offset","wrapS","wrapT","n","Color","fromArray","opacity","transparent","invertTrProperty","MeshPhongMaterial","matParams","Vector2","items","bumpScale","splice","join","mapping","texture","Loader","Handlers","get","TextureLoader","OBJLoader","object_pattern","material_library_pattern","material_use_pattern","ParserState","state","objects","vertices","normals","colors","uvs","materialLibraries","startObject","fromDeclaration","previousMaterial","currentMaterial","_finalize","geometry","smooth","startMaterial","libraries","previous","inherited","groupCount","material","mtllib","Array","isArray","groupStart","groupEnd","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addColor","addUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","uvLen","nLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","time","replace","lineFirstChar","lineLength","result","trimLeft","data","lineData","substr","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","lineVertices","lineUVs","li","llen","parts","pointData","exec","Error","container","Group","concat","isLine","isPoints","hasVertexColors","buffergeometry","BufferGeometry","addAttribute","Float32BufferAttribute","computeVertexNormals","mesh","createdMaterials","miLen","sourceMaterial","LineBasicMaterial","PointsMaterial","materialPoints","sizeAttenuation","materialLine","lights","flatShading","vertexColors","VertexColors","NoColors","addGroup","LineSegments","Points","Mesh","timeEnd","exports","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Water_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Water_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Car_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Car_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/Car.9dc84d60.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"Geometry\"},[_c('div',{attrs:{\"id\":\"Geometry\"}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.percentage !== 100),expression:\"percentage !== 100\"}],staticClass:\"mask\"},[_c('el-progress',{attrs:{\"text-inside\":true,\"stroke-width\":18,\"percentage\":_vm.percentage,\"status\":\"success\"}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\nimport * as THREE from 'three'\nimport * as OrbitControls from 'three-orbitcontrols'\nimport { MTLLoader, OBJLoader } from 'three-obj-mtl-loader'\n\n@Component\n\nexport default class Geometry extends Vue {\n  private percentage: number = 0\n  public mounted () {\n    const scene = new THREE.Scene()\n    const mtlLoader = new MTLLoader()\n    const objLoader = new OBJLoader()\n    // 车身\n    mtlLoader.load('/www/self/car.mtl', (materials: any) => {\n      materials.preload()\n      objLoader.setMaterials(materials)\n      objLoader.load('/www/self/car.obj', (object: any) => {\n        scene.add(object)\n        object.name = 'car_body'\n        console.log(scene)\n      },// 资源加载过程中的回调函数\n      (xhr: any) => {\n        this.percentage = xhr.loaded / xhr.total * 100\n      })\n    })\n    // 车轮\n    mtlLoader.load('/www/self/front_wheel.mtl', (materials: any) => {\n      materials.preload()\n      objLoader.setMaterials(materials)\n      objLoader.load('/www/self/front_wheel.obj', (object: any) => {\n        // 前左轮\n        const frontLeft = object.clone()\n        frontLeft.name = 'front_left'\n        frontLeft.rotateZ(-Math.PI)\n        frontLeft.translateX(2.79475)\n        frontLeft.translateY(-2.6)\n        frontLeft.translateZ(-3.28386)\n        // 前右轮\n        scene.add(frontLeft)\n        const frontRight = object.clone()\n        frontRight.name = 'front_right'\n        frontRight.translateX(2.79475)\n        frontRight.translateZ(-3.28386)\n        scene.add(frontRight)\n      })\n    })\n    /**\n     * 光源设置\n     */\n    // 点光源\n    const point = new THREE.PointLight(0xffffff)\n    point.position.set(400, 200, 300) // 点光源位置\n    scene.add(point) // 点光源添加到场景中\n    // 环境光\n    const ambient = new THREE.AmbientLight(0x444444)\n    scene.add(ambient)\n    /**\n     * 相机设置\n     */\n    const width = window.innerWidth - 50 // 窗口宽度\n    const height = window.innerHeight - 100 // 窗口高度\n    const k = width / height // 窗口宽高比\n    const s = 10 // 三维场景显示范围控制系数，系数越大，显示的范围越大\n    // 创建相机对象\n    const camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 0, 100)\n    camera.position.set(10, 10, 10) // 设置相机位置\n    camera.lookAt(scene.position) // 设置相机方向(指向的场景对象)\n    /**\n     * 创建渲染器对象\n     */\n    const renderer = new THREE.WebGLRenderer()\n    renderer.setSize(width, height) // 设置渲染区域尺寸\n    renderer.setClearColor(0xb9d3ff, 1) // 设置背景颜色\n    const Geometry: HTMLElement | null = document.getElementById('Geometry')\n    if (Geometry) {\n      Geometry.appendChild(renderer.domElement)\n    }\n\n    // 渲染函数\n    function render () {\n      requestAnimationFrame(render) // 请求再次执行渲染函数render，渲染下一帧\n      rend()\n    }\n    render()\n    const clock = new THREE.Clock()\n    let sc: number = 0\n    function rend () {\n      sc = sc + 0.05\n      const frontLeft: any = scene.getObjectByName('front_left')\n      if (frontLeft) {\n        frontLeft.translateX(0.0035 * Math.sin(sc))\n      }\n      const frontRight: any = scene.getObjectByName('front_right')\n      if (frontRight) {\n        frontRight.translateX(0.0035 * Math.sin(sc))\n      }\n      const carBody: any = scene.getObjectByName('car_body')\n      if (carBody) {\n        carBody.rotateX(0.001 * Math.sin(sc))\n      }\n      camera.lookAt(scene.position)\n      renderer.render(scene, camera)\n    }\n    // 创建控件对象  相机对象camera作为参数   控件可以监听鼠标的变化，改变相机对象的属性\n    const controls = new OrbitControls(camera)\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Car.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Car.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Car.vue?vue&type=template&id=d473dc92&\"\nimport script from \"./Car.vue?vue&type=script&lang=ts&\"\nexport * from \"./Car.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Car.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Car.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"Geometry\"},[_c('div',{attrs:{\"id\":\"Geometry\"}})])}]\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\nimport * as THREE from 'three'\nimport * as TWEEN from 'es6-tween'\nimport * as OrbitControls from 'three-orbitcontrols'\n// import { DoubleSide } from 'three'\n// import * as Water from '../common/Water.js'\n\n@Component\n\nexport default class Geometry extends Vue {\n  public mounted () {\n    const scene = new THREE.Scene()\n    // 字体加载\n    const loaderFont = new THREE.FontLoader()\n    const font = loaderFont.load(\n        // resource URL\n        '/www/self/fonts/optimer_bold.typeface.json',\n        // onLoad callback\n        (font) => {\n            // do something with the font\n          console.log(font)\n            // scene.add( font );\n          const fontMaterial = new THREE.MeshPhongMaterial({\n            color: 'yellow',\n            specular: '0xffffff',\n            shininess: 30\n          })\n          const text = new THREE.TextBufferGeometry('Water Effect', {\n            font: font,\n            size: 14,\n            height: 20,\n            curveSegments: 12,\n            bevelThickness: 10,\n            bevelSize: 8,\n            bevelEnabled: false\n          })\n          text.center()\n          text.scale(2, 2, 2)\n          text.translate(0, 0, -600)\n          text.rotateX(-Math.PI / 5)\n          text.rotateY(Math.PI / 4)\n          let textFont = new THREE.Mesh(text, fontMaterial)\n            // scene.add(textFont)\n        }\n    )\n    // water加载\n    const groundGeometry = new THREE.PlaneBufferGeometry(960, 540, 960, 540)\n    const groundMaterial = new THREE.MeshBasicMaterial({ color: 0xcccccc })\n    const ground = new THREE.Mesh(groundGeometry, groundMaterial)\n    ground.rotation.x = -Math.PI * 0.5\n    // ground.rotation.y = Math.PI * 3 / 8;\n    scene.add(ground)\n\n    let textureLoader = new THREE.TextureLoader()\n      // textureLoader.load( 'textures/floors/FloorsCheckerboard_S_Diffuse.jpg', function( map ) {\n    textureLoader.load('/www/self/2.jpg', function (map) {\n        // map.wrapS = THREE.RepeatWrapping;\n        // map.wrapT = THREE.RepeatWrapping;\n        // map.anisotropy = 16;\n        // map.repeat.set( 4, 4 );\n      groundMaterial.map = map\n      groundMaterial.needsUpdate = true\n    })\n\n    let waterGeometry = new THREE.PlaneBufferGeometry(20, 20)\n      // var flowMap = textureLoader.load( 'textures/water/Water_1_M_Flow.jpg' );\n      // var flowMap = textureLoader.load( 'textures/water/clouds.jpg' );\n    let flowMap = textureLoader.load('/www/self/water/crystalize.jpg')\n      // var flowMap = textureLoader.load( 'textures/water/fibers.jpg' );\n      // var flowMap = textureLoader.load( 'textures/water/pointilize.jpg' );\n      // var flowMap = textureLoader.load( 'textures/water/ripple.jpg' );\n      // var flowMap = textureLoader.load( 'textures/water/ripple_2.jpg' );\n\n    // const\twater = new Water( waterGeometry, {\n    //   scale: 2,\n    //   textureWidth: 1024,\n    //   textureHeight: 1024,\n    //   flowMap: flowMap\n    // } );\n\n    // water.position.y = 1;\n    // water.rotation.x = Math.PI * - 0.5;\n    // scene.add( water );\n    /**\n     * 光源设置\n     */\n    // 点光源\n    const point = new THREE.PointLight(0xffffff)\n    point.position.set(400, 200, 300) // 点光源位置\n    scene.add(point) // 点光源添加到场景中\n    // 环境光\n    const ambient = new THREE.AmbientLight(0x444444)\n    scene.add(ambient)\n    /**\n     * 相机设置\n     */\n    const width = window.innerWidth - 50 // 窗口宽度\n    const height = window.innerHeight - 100 // 窗口高度\n    const k = width / height // 窗口宽高比\n    const s = 300 // 三维场景显示范围控制系数，系数越大，显示的范围越大\n    // 创建相机对象\n    const camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000)\n    camera.position.set(0, 400, 0) // 设置相机位置\n    camera.lookAt(scene.position) // 设置相机方向(指向的场景对象)\n    /**\n     * 创建渲染器对象\n     */\n    const renderer = new THREE.WebGLRenderer()\n    renderer.setSize(width, height) // 设置渲染区域尺寸\n    renderer.setClearColor(0xb9d3ff, 1) // 设置背景颜色\n    const Geometry: HTMLElement | null = document.getElementById('Geometry')\n    if (Geometry) {\n      Geometry.appendChild(renderer.domElement)\n    }\n\n    // 渲染函数\n    function render () {\n      requestAnimationFrame(render) // 请求再次执行渲染函数render，渲染下一帧\n      rend()\n    }\n    render()\n    const clock = new THREE.Clock()\n    function rend () {\n      camera.lookAt(scene.position)\n      renderer.render(scene, camera)\n    }\n    // 创建控件对象  相机对象camera作为参数   控件可以监听鼠标的变化，改变相机对象的属性\n    const controls = new OrbitControls(camera)\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Water.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Water.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Water.vue?vue&type=template&id=e587b964&\"\nimport script from \"./Water.vue?vue&type=script&lang=ts&\"\nexport * from \"./Water.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Water.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Water.vue\"\nexport default component.exports","var THREE = require('three')\n\n/**\n * Loads a Wavefront .mtl file specifying materials\n *\n * @author angelxuanchang\n */\n\nTHREE.MTLLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.MTLLoader.prototype = {\n\n\tconstructor: THREE.MTLLoader,\n\n\t/**\n\t * Loads and parses a MTL asset from a URL.\n\t *\n\t * @param {String} url - URL to the MTL file.\n\t * @param {Function} [onLoad] - Callback invoked with the loaded object.\n\t * @param {Function} [onProgress] - Callback for download progress.\n\t * @param {Function} [onError] - Callback for download errors.\n\t *\n\t * @see setPath setTexturePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setPath and/or setTexturePath explicitly prior to load.\n\t */\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\t/**\n\t * Set base path for resolving references.\n\t * If set this path will be prepended to each loaded and found reference.\n\t *\n\t * @see setTexturePath\n\t * @param {String} path\n\t * @return {THREE.MTLLoader}\n\t *\n\t * @example\n\t *     mtlLoader.setPath( 'assets/obj/' );\n\t *     mtlLoader.load( 'my.mtl', ... );\n\t */\n\tsetPath: function ( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Set base path for resolving texture references.\n\t * If set this path will be prepended found texture reference.\n\t * If not set and setPath is, it will be used as texture base path.\n\t *\n\t * @see setPath\n\t * @param {String} path\n\t * @return {THREE.MTLLoader}\n\t *\n\t * @example\n\t *     mtlLoader.setPath( 'assets/obj/' );\n\t *     mtlLoader.setTexturePath( 'assets/textures/' );\n\t *     mtlLoader.load( 'my.mtl', ... );\n\t */\n\tsetTexturePath: function ( path ) {\n\n\t\tthis.texturePath = path;\n\t\treturn this;\n\n\t},\n\n\tsetBaseUrl: function ( path ) {\n\n\t\tconsole.warn( 'THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead.' );\n\n\t\treturn this.setTexturePath( path );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetMaterialOptions: function ( value ) {\n\n\t\tthis.materialOptions = value;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Parses a MTL file.\n\t *\n\t * @param {String} text - Content of MTL file\n\t * @return {THREE.MTLLoader.MaterialCreator}\n\t *\n\t * @see setPath setTexturePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setPath and/or setTexturePath explicitly prior to parse.\n\t */\n\tparse: function ( text ) {\n\n\t\tvar lines = text.split( '\\n' );\n\t\tvar info = {};\n\t\tvar delimiter_pattern = /\\s+/;\n\t\tvar materialsInfo = {};\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tvar line = lines[ i ];\n\t\t\tline = line.trim();\n\n\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\n\n\t\t\t\t// Blank line or comment ignore\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar pos = line.indexOf( ' ' );\n\n\t\t\tvar key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\n\t\t\tkey = key.toLowerCase();\n\n\t\t\tvar value = ( pos >= 0 ) ? line.substring( pos + 1 ) : '';\n\t\t\tvalue = value.trim();\n\n\t\t\tif ( key === 'newmtl' ) {\n\n\t\t\t\t// New material\n\n\t\t\t\tinfo = { name: value };\n\t\t\t\tmaterialsInfo[ value ] = info;\n\n\t\t\t} else if ( info ) {\n\n\t\t\t\tif ( key === 'ka' || key === 'kd' || key === 'ks' ) {\n\n\t\t\t\t\tvar ss = value.split( delimiter_pattern, 3 );\n\t\t\t\t\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinfo[ key ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar materialCreator = new THREE.MTLLoader.MaterialCreator( this.texturePath || this.path, this.materialOptions );\n\t\tmaterialCreator.setCrossOrigin( this.crossOrigin );\n\t\tmaterialCreator.setManager( this.manager );\n\t\tmaterialCreator.setMaterials( materialsInfo );\n\t\treturn materialCreator;\n\n\t}\n\n};\n\n/**\n * Create a new THREE-MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n * @constructor\n */\n\nTHREE.MTLLoader.MaterialCreator = function ( baseUrl, options ) {\n\n\tthis.baseUrl = baseUrl || '';\n\tthis.options = options;\n\tthis.materialsInfo = {};\n\tthis.materials = {};\n\tthis.materialsArray = [];\n\tthis.nameLookup = {};\n\n\tthis.side = ( this.options && this.options.side ) ? this.options.side : THREE.FrontSide;\n\tthis.wrap = ( this.options && this.options.wrap ) ? this.options.wrap : THREE.RepeatWrapping;\n\n};\n\nTHREE.MTLLoader.MaterialCreator.prototype = {\n\n\tconstructor: THREE.MTLLoader.MaterialCreator,\n\n\tcrossOrigin: 'Anonymous',\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tsetManager: function ( value ) {\n\n\t\tthis.manager = value;\n\n\t},\n\n\tsetMaterials: function ( materialsInfo ) {\n\n\t\tthis.materialsInfo = this.convert( materialsInfo );\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t},\n\n\tconvert: function ( materialsInfo ) {\n\n\t\tif ( ! this.options ) return materialsInfo;\n\n\t\tvar converted = {};\n\n\t\tfor ( var mn in materialsInfo ) {\n\n\t\t\t// Convert materials info into normalized form based on options\n\n\t\t\tvar mat = materialsInfo[ mn ];\n\n\t\t\tvar covmat = {};\n\n\t\t\tconverted[ mn ] = covmat;\n\n\t\t\tfor ( var prop in mat ) {\n\n\t\t\t\tvar save = true;\n\t\t\t\tvar value = mat[ prop ];\n\t\t\t\tvar lprop = prop.toLowerCase();\n\n\t\t\t\tswitch ( lprop ) {\n\n\t\t\t\t\tcase 'kd':\n\t\t\t\t\tcase 'ka':\n\t\t\t\t\tcase 'ks':\n\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\t\tif ( this.options && this.options.normalizeRGB ) {\n\n\t\t\t\t\t\t\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.options && this.options.ignoreZeroRGBs ) {\n\n\t\t\t\t\t\t\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 2 ] === 0 ) {\n\n\t\t\t\t\t\t\t\t// ignore\n\n\t\t\t\t\t\t\t\tsave = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( save ) {\n\n\t\t\t\t\tcovmat[ lprop ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn converted;\n\n\t},\n\n\tpreload: function () {\n\n\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\tthis.create( mn );\n\n\t\t}\n\n\t},\n\n\tgetIndex: function ( materialName ) {\n\n\t\treturn this.nameLookup[ materialName ];\n\n\t},\n\n\tgetAsArray: function () {\n\n\t\tvar index = 0;\n\n\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\tthis.materialsArray[ index ] = this.create( mn );\n\t\t\tthis.nameLookup[ mn ] = index;\n\t\t\tindex ++;\n\n\t\t}\n\n\t\treturn this.materialsArray;\n\n\t},\n\n\tcreate: function ( materialName ) {\n\n\t\tif ( this.materials[ materialName ] === undefined ) {\n\n\t\t\tthis.createMaterial_( materialName );\n\n\t\t}\n\n\t\treturn this.materials[ materialName ];\n\n\t},\n\n\tcreateMaterial_: function ( materialName ) {\n\n\t\t// Create material\n\n\t\tvar scope = this;\n\t\tvar mat = this.materialsInfo[ materialName ];\n\t\tvar params = {\n\n\t\t\tname: materialName,\n\t\t\tside: this.side\n\n\t\t};\n\n\t\tfunction resolveURL( baseUrl, url ) {\n\n\t\t\tif ( typeof url !== 'string' || url === '' )\n\t\t\t\treturn '';\n\n\t\t\t// Absolute URL\n\t\t\tif ( /^https?:\\/\\//i.test( url ) ) return url;\n\n\t\t\treturn baseUrl + url;\n\n\t\t}\n\n\t\tfunction setMapForType( mapType, value ) {\n\n\t\t\tif ( params[ mapType ] ) return; // Keep the first encountered texture\n\n\t\t\tvar texParams = scope.getTextureParams( value, params );\n\t\t\tvar map = scope.loadTexture( resolveURL( scope.baseUrl, texParams.url ) );\n\n\t\t\tmap.repeat.copy( texParams.scale );\n\t\t\tmap.offset.copy( texParams.offset );\n\n\t\t\tmap.wrapS = scope.wrap;\n\t\t\tmap.wrapT = scope.wrap;\n\n\t\t\tparams[ mapType ] = map;\n\n\t\t}\n\n\t\tfor ( var prop in mat ) {\n\n\t\t\tvar value = mat[ prop ];\n\t\t\tvar n;\n\n\t\t\tif ( value === '' ) continue;\n\n\t\t\tswitch ( prop.toLowerCase() ) {\n\n\t\t\t\t// Ns is material specular exponent\n\n\t\t\t\tcase 'kd':\n\n\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\tparams.color = new THREE.Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ks':\n\n\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\n\t\t\t\t\tparams.specular = new THREE.Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_kd':\n\n\t\t\t\t\t// Diffuse texture map\n\n\t\t\t\t\tsetMapForType( \"map\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ks':\n\n\t\t\t\t\t// Specular map\n\n\t\t\t\t\tsetMapForType( \"specularMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'norm':\n\n\t\t\t\t\tsetMapForType( \"normalMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_bump':\n\t\t\t\tcase 'bump':\n\n\t\t\t\t\t// Bump texture map\n\n\t\t\t\t\tsetMapForType( \"bumpMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ns':\n\n\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\n\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n\t\t\t\t\tparams.shininess = parseFloat( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'd':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( n < 1 ) {\n\n\t\t\t\t\t\tparams.opacity = n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tr':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( this.options && this.options.invertTrProperty ) n = 1 - n;\n\n\t\t\t\t\tif ( n > 0 ) {\n\n\t\t\t\t\t\tparams.opacity = 1 - n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.materials[ materialName ] = new THREE.MeshPhongMaterial( params );\n\t\treturn this.materials[ materialName ];\n\n\t},\n\n\tgetTextureParams: function ( value, matParams ) {\n\n\t\tvar texParams = {\n\n\t\t\tscale: new THREE.Vector2( 1, 1 ),\n\t\t\toffset: new THREE.Vector2( 0, 0 )\n\n\t\t };\n\n\t\tvar items = value.split( /\\s+/ );\n\t\tvar pos;\n\n\t\tpos = items.indexOf( '-bm' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\tmatParams.bumpScale = parseFloat( items[ pos + 1 ] );\n\t\t\titems.splice( pos, 2 );\n\n\t\t}\n\n\t\tpos = items.indexOf( '-s' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.scale.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\tpos = items.indexOf( '-o' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.offset.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\ttexParams.url = items.join( ' ' ).trim();\n\t\treturn texParams;\n\n\t},\n\n\tloadTexture: function ( url, mapping, onLoad, onProgress, onError ) {\n\n\t\tvar texture;\n\t\tvar loader = THREE.Loader.Handlers.get( url );\n\t\tvar manager = ( this.manager !== undefined ) ? this.manager : THREE.DefaultLoadingManager;\n\n\t\tif ( loader === null ) {\n\n\t\t\tloader = new THREE.TextureLoader( manager );\n\n\t\t}\n\n\t\tif ( loader.setCrossOrigin ) loader.setCrossOrigin( this.crossOrigin );\n\t\ttexture = loader.load( url, onLoad, onProgress, onError );\n\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.OBJLoader = ( function () {\n\n\t// o object_name | g group_name\n\tvar object_pattern = /^[og]\\s*(.+)?/;\n\t// mtllib file_reference\n\tvar material_library_pattern = /^mtllib /;\n\t// usemtl material_name\n\tvar material_use_pattern = /^usemtl /;\n\n\tfunction ParserState() {\n\n\t\tvar state = {\n\t\t\tobjects: [],\n\t\t\tobject: {},\n\n\t\t\tvertices: [],\n\t\t\tnormals: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\n\t\t\tmaterialLibraries: [],\n\n\t\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\t\tthis.object.name = name;\n\t\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t\tthis.object = {\n\t\t\t\t\tname: name || '',\n\t\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\t\tgeometry: {\n\t\t\t\t\t\tvertices: [],\n\t\t\t\t\t\tnormals: [],\n\t\t\t\t\t\tcolors: [],\n\t\t\t\t\t\tuvs: []\n\t\t\t\t\t},\n\t\t\t\t\tmaterials: [],\n\t\t\t\t\tsmooth: true,\n\n\t\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\t\tvar previous = this._finalize( false );\n\n\t\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = {\n\t\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\t\tvar cloned = {\n\t\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\t\treturn material;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn undefined;\n\n\t\t\t\t\t},\n\n\t\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\t\tvar lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\t\tfor ( var mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Inherit previous objects material.\n\t\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\t\tvar declared = previousMaterial.clone( 0 );\n\t\t\t\t\tdeclared.inherited = true;\n\t\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t\t}\n\n\t\t\t\tthis.objects.push( this.object );\n\n\t\t\t},\n\n\t\t\tfinalize: function () {\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t\t},\n\n\t\t\taddVertex: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexPoint: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexLine: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddNormal: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.normals;\n\t\t\t\tvar dst = this.object.geometry.normals;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddColor: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.colors;\n\t\t\t\tvar dst = this.object.geometry.colors;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddUV: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t\t},\n\n\t\t\taddUVLine: function ( a ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t\t},\n\n\t\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tvar ia = this.parseVertexIndex( a, vLen );\n\t\t\t\tvar ib = this.parseVertexIndex( b, vLen );\n\t\t\t\tvar ic = this.parseVertexIndex( c, vLen );\n\n\t\t\t\tthis.addVertex( ia, ib, ic );\n\n\t\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\t\tvar uvLen = this.uvs.length;\n\t\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\t\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\t\t// Normals are many times the same. If so, skip function call and parseInt.\n\t\t\t\t\tvar nLen = this.normals.length;\n\t\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\n\t\t\t\t\tib = na === nb ? ia : this.parseNormalIndex( nb, nLen );\n\t\t\t\t\tic = na === nc ? ia : this.parseNormalIndex( nc, nLen );\n\n\t\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.colors.length > 0 ) {\n\n\t\t\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexPoint( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\t\t\t\tvar uvLen = this.uvs.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tstate.startObject( '', false );\n\n\t\treturn state;\n\n\t}\n\n\t//\n\n\tfunction OBJLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t\tthis.materials = null;\n\n\t}\n\n\tOBJLoader.prototype = {\n\n\t\tconstructor: OBJLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMaterials: function ( materials ) {\n\n\t\t\tthis.materials = materials;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tconsole.time( 'OBJLoader' );\n\n\t\t\tvar state = new ParserState();\n\n\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t\t}\n\n\t\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t\t}\n\n\t\t\tvar lines = text.split( '\\n' );\n\t\t\tvar line = '', lineFirstChar = '';\n\t\t\tvar lineLength = 0;\n\t\t\tvar result = [];\n\n\t\t\t// Faster to just trim left side of the line. Use if available.\n\t\t\tvar trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\t\tfor ( var i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\t\tline = lines[ i ];\n\n\t\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\t\tlineLength = line.length;\n\n\t\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t\t// @todo invoke passed in handler if any\n\t\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\t\tvar data = line.split( /\\s+/ );\n\n\t\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\t\tcase 'v':\n\t\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( data.length === 8 ) {\n\n\t\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar vertexData = lineData.split( /\\s+/ );\n\t\t\t\t\tvar faceVertices = [];\n\n\t\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\t\tfor ( var j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertexData[ j ];\n\n\t\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\t\tvar vertexParts = vertex.split( '/' );\n\t\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\t\tvar v1 = faceVertices[ 0 ];\n\n\t\t\t\t\tfor ( var j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar v2 = faceVertices[ j ];\n\t\t\t\t\t\tvar v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\t\tvar lineParts = line.substring( 1 ).trim().split( \" \" );\n\t\t\t\t\tvar lineVertices = [], lineUVs = [];\n\n\t\t\t\t\tif ( line.indexOf( \"/\" ) === - 1 ) {\n\n\t\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\t\tvar parts = lineParts[ li ].split( \"/\" );\n\n\t\t\t\t\t\t\tif ( parts[ 0 ] !== \"\" ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\t\tif ( parts[ 1 ] !== \"\" ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar pointData = lineData.split( \" \" );\n\n\t\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// o object_name\n\t\t\t\t\t// or\n\t\t\t\t\t// g group_name\n\n\t\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t\t// var name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\t\tvar name = ( \" \" + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\t\tstate.startObject( name );\n\n\t\t\t\t} else if ( material_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// material\n\n\t\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t\t} else if ( material_library_pattern.test( line ) ) {\n\n\t\t\t\t\t// mtl file\n\n\t\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t\t// smooth shading\n\n\t\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\t\tvar value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t\t}\n\t\t\t\t\tvar material = state.object.currentMaterial();\n\t\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Handle null terminated files without exception\n\t\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\t\tthrow new Error( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.finalize();\n\n\t\t\tvar container = new THREE.Group();\n\t\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\t\tfor ( var i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tvar object = state.objects[ i ];\n\t\t\t\tvar geometry = object.geometry;\n\t\t\t\tvar materials = object.materials;\n\t\t\t\tvar isLine = ( geometry.type === 'Line' );\n\t\t\t\tvar isPoints = ( geometry.type === 'Points' );\n\t\t\t\tvar hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tvar buffergeometry = new THREE.BufferGeometry();\n\n\t\t\t\tbuffergeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.addAttribute( 'normal', new THREE.Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbuffergeometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.addAttribute( 'color', new THREE.Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.addAttribute( 'uv', new THREE.Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tvar createdMaterials = [];\n\n\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\tvar material = undefined;\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof THREE.LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialLine = new THREE.LineBasicMaterial();\n\t\t\t\t\t\t\tmaterialLine.copy( material );\n\t\t\t\t\t\t\tmaterialLine.lights = false; // TOFIX\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof THREE.PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialPoints = new THREE.PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tmaterialLine.copy( material );\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! material ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new THREE.LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new THREE.PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\tmaterial.vertexColors = hasVertexColors ? THREE.VertexColors : THREE.NoColors;\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new THREE.Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new THREE.Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t\tconsole.timeEnd( 'OBJLoader' );\n\n\t\t\treturn container;\n\n\t\t}\n\n\t};\n\n\treturn OBJLoader;\n\n} )();\n\nexports.MTLLoader = THREE.MTLLoader;\nexports.OBJLoader = THREE.OBJLoader;\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Water.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Water.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Car.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Car.vue?vue&type=style&index=0&lang=less&\""],"sourceRoot":""}